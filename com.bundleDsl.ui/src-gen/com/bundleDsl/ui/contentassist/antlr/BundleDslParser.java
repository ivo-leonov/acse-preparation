/*
 * generated by Xtext
 */
package com.bundleDsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.bundleDsl.services.BundleDslGrammarAccess;

public class BundleDslParser extends AbstractContentAssistParser {
	
	@Inject
	private BundleDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.bundleDsl.ui.contentassist.antlr.internal.InternalBundleDslParser createParser() {
		com.bundleDsl.ui.contentassist.antlr.internal.InternalBundleDslParser result = new com.bundleDsl.ui.contentassist.antlr.internal.InternalBundleDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBundleAccess().getGroup(), "rule__Bundle__Group__0");
					put(grammarAccess.getCarAccess().getGroup(), "rule__Car__Group__0");
					put(grammarAccess.getExtraAccess().getGroup(), "rule__Extra__Group__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getCarExtraAccess().getGroup(), "rule__CarExtra__Group__0");
					put(grammarAccess.getCarExtraAccess().getGroup_1(), "rule__CarExtra__Group_1__0");
					put(grammarAccess.getModelAccess().getBundleAssignment(), "rule__Model__BundleAssignment");
					put(grammarAccess.getBundleAccess().getNameAssignment_1(), "rule__Bundle__NameAssignment_1");
					put(grammarAccess.getBundleAccess().getCarsAssignment_3(), "rule__Bundle__CarsAssignment_3");
					put(grammarAccess.getBundleAccess().getServicesAssignment_4(), "rule__Bundle__ServicesAssignment_4");
					put(grammarAccess.getCarAccess().getNameAssignment_1(), "rule__Car__NameAssignment_1");
					put(grammarAccess.getCarAccess().getTypeAssignment_4(), "rule__Car__TypeAssignment_4");
					put(grammarAccess.getCarAccess().getUsedAssignment_5(), "rule__Car__UsedAssignment_5");
					put(grammarAccess.getCarAccess().getExtrasAssignment_8(), "rule__Car__ExtrasAssignment_8");
					put(grammarAccess.getExtraAccess().getNameAssignment_0(), "rule__Extra__NameAssignment_0");
					put(grammarAccess.getExtraAccess().getDescriptionAssignment_2(), "rule__Extra__DescriptionAssignment_2");
					put(grammarAccess.getServiceAccess().getNameAssignment_1(), "rule__Service__NameAssignment_1");
					put(grammarAccess.getServiceAccess().getCarExtrasAssignment_3(), "rule__Service__CarExtrasAssignment_3");
					put(grammarAccess.getCarExtraAccess().getCarAssignment_0(), "rule__CarExtra__CarAssignment_0");
					put(grammarAccess.getCarExtraAccess().getExtrasAssignment_1_1(), "rule__CarExtra__ExtrasAssignment_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.bundleDsl.ui.contentassist.antlr.internal.InternalBundleDslParser typedParser = (com.bundleDsl.ui.contentassist.antlr.internal.InternalBundleDslParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BundleDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BundleDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
